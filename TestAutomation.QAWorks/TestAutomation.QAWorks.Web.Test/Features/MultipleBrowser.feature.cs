// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestAutomation.QAWorks.Web.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MultipleBrowser")]
    public partial class MultipleBrowserFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MultipleBrowser.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MultipleBrowser", "\tIn order to make sure QAWorks Contact Page works with different Browsers \r\n\tAs a" +
                    " Techinical Test Engineer\r\n\tI want a valid submission through contact page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid Submission Using Chrome")]
        [NUnit.Framework.CategoryAttribute("001")]
        [NUnit.Framework.CategoryAttribute("Chrome")]
        [NUnit.Framework.TestCaseAttribute("j.Bloggs", "j.Bloggs@qaworks.com", "please contact me I want to find out more", new string[0])]
        public virtual void ValidSubmissionUsingChrome(string name, string email, string message, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "001",
                    "Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid Submission Using Chrome", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("I\'m on the QAWorks website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Name",
                        string.Format("{0}", name)});
            table1.AddRow(new string[] {
                        "Email",
                        string.Format("{0}", email)});
            table1.AddRow(new string[] {
                        "Messsage",
                        string.Format("{0}", message)});
#line 10
testRunner.When("I contact QAWorks with the following information", ((string)(null)), table1, "When ");
#line 15
testRunner.Then("Information should be Submitted Successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
testRunner.And("All fields should be cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid Submission Using FireFox")]
        [NUnit.Framework.CategoryAttribute("002")]
        [NUnit.Framework.CategoryAttribute("FireFox")]
        public virtual void ValidSubmissionUsingFireFox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid Submission Using FireFox", new string[] {
                        "002",
                        "FireFox"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("I\'m on the QAWorks website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "j.Bloggs"});
            table2.AddRow(new string[] {
                        "Email",
                        "j.Bloggs@qaworks.com"});
            table2.AddRow(new string[] {
                        "Messsage",
                        "please contact me"});
#line 26
testRunner.When("I contact QAWorks with the following information", ((string)(null)), table2, "When ");
#line 31
testRunner.Then("Information should be Submitted Successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
testRunner.And("All fields should be cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
